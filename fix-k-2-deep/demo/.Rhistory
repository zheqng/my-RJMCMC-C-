24/96
plot.z<-function(Time,load,z){
color = c("red","blue")
plot(-100,-100,xlim=c(0,96),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
aaa = seq(0.25,24,by = 24/96)
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
?mar
?par
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 2, 4, 2) + 0.1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,fig = c(0, 1, 0, 0.9))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,fig= c(0,0,0,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(1,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
?xaxis
?axis
require(stats) # for rnorm
plot(1:4, rnorm(4), axes = FALSE)
axis(1, 1:4, LETTERS[1:4])
axis(2)
box() #- to make it look "as usual"
plot(1:7, rnorm(7), main = "axis() examples",
type = "s", xaxt = "n", frame = FALSE, col = "red")
axis(1, 1:7, LETTERS[1:7], col.axis = "blue")
# unusual options:
axis(4, col = "violet", col.axis = "dark violet", lwd = 2)
axis(3, col = "gold", lty = 2, lwd = 0.5)
lot(1:10, xaxt = "n")
axis(1, xaxp = c(2, 9, 7))
plot(1:10, xaxt = "n")
axis(1, xaxp = c(2, 9, 7))
## Changing default gap between labels:
plot(0:100, type="n", axes=FALSE, ann=FALSE)
title(quote("axis(1, .., gap.axis = f)," ~~ f >= 0))
axis(2, at = 5*(0:20), las = 1, gap.axis = 1/4)
gaps <- c(4, 2, 1, 1/2, 1/4, 0.1, 0)
chG <- paste0(ifelse(gaps == 1, "default:  ", ""),
"gap.axis=", formatC(gaps))
jj <- seq_along(gaps)
linG <- -2.5*(jj-1)
for(j in jj) {
isD <- gaps[j] == 1 # is default
axis (1, at=5*(0:20), gap.axis = gaps[j], padj=-1, line = linG[j],
col.axis = if(isD) "forest green" else 1, font.axis= 1+isD)
}
mtext(chG, side=1, padj=-1, line = linG -1/2, cex=3/4,
col = ifelse(gaps == 1, "forest green", "blue3"))
## now shrink the window (in x- and y-direction) and observe the axis labels drawn
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
}
plot.z(Time,elecload,z[N,]+1)
axis(1,at = seq(0,24,by=6))
axis(1,at = seq(0,24,by=4))
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i")
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
?plot
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i")
axis(1,at = seq(0,24,by=4))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
?plot
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n")
axis(1,at = seq(0,24,by=4))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
range(elecload)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
plot(-100,-100,xlim=c(0,24),ylim =range(load),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
plot(-100,-100,xlim=c(0,24),ylim =range(load),ylim=c(4,10),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = "Electric load(MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = "Electric load(10^3MW)",xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(Electric~load(10^3MW)),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
?expression
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(10^3MW),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
expression(10^3MW)
expression(10^3)
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(10^3),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression("Electric",10^3),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
?paste
paste("Elec",expression(10^3))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = paste("Electric load",expression(10^3),"MW"),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
expression(10^3)
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load",10^3,"MW")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
?expression
?paste
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load",10^3,"MW",sep = " ")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load",10^3,"MW",sep = " ")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(3,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load(",10^3,"MW)",sep = " ")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(2,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load(",10^3,"MW)",sep = " ")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
plot.z<-function(Time,load,z){
color = c("red","blue")
op<-par(mar = c(5, 4, 4, 2) + 0.1,mgp = c(2,1,0))
plot(-100,-100,xlim=c(0,24),ylim=c(4,10),xlab = "Time(h)" ,ylab = expression(paste("Electric load(",10^3,"MW)",sep = " ")),xaxs = "i", yaxs ="i",xaxt="n",yaxt="n")
axis(1,at = seq(0,24,by=4))
axis(2,at=seq(4,10,by=1))
for(i in 1:100){
lines(seq(0.25,24,by = 24/96),load[i,],col=color[z[[i]]])
}
# axis(1,at = seq(0,24,by=4))
}
plot.z(Time,elecload,z[N,]+1)
24851/60
24851/60/60
rm(list = ls())
# setwd("/media/zheqng/Seagate Backup Plus Drive/zheqng@nwu/src/RJMCMC-my-C/simu1/fix-k-move/demo/")
setwd('/home/zheqng/src/RJMCMC-my-C/novel perimental/electric load 2008/fix-k-2-deep/demo/')
library('matrixStats')
# library('GPFDA')
library('MASS')
library('mvtnorm')
source('predict.r')
# rm( list = ls())
# setwd("~/src/RJMCMC-my-C/fix-k-move/demo/")
# setwd("/media/zheqng/Seagate Backup Plus Drive/zheqng@nwu/src/RJMCMC-my-C/simu1/fix-k-move/demo/")
library("fda")
theta.tmp<-read.table("parameter.res",fill=TRUE)
theta.tmp <- as.matrix(theta.tmp)
theta.tmp <- as.vector(theta.tmp)
N = nrow(theta.tmp)/3/4
N = length(theta.tmp)/3/4
z <-read.table("z.res",fill = TRUE)
theta= vector("list",N)
for(i in 1:N){
k = datha$K[i]
theta[[i]]$pi <- theta.tmp[1:k]
theta[[i]]$w<- theta.tmp[(k+1):(2*k)]
theta[[i]]$v<- theta.tmp[(2*k+1):(3*k)]
theta[[i]]$sigma2<- theta.tmp[(3*k+1):(4*k)]
theta[[i]]$K = k
theta.tmp<-theta.tmp[-(1:(4*k))]
}
N = length(theta.tmp)/2/4
theta= vector("list",N)
for(i in 1:N){
k = 2
theta[[i]]$pi <- theta.tmp[1:k]
theta[[i]]$w<- theta.tmp[(k+1):(2*k)]
theta[[i]]$v<- theta.tmp[(2*k+1):(3*k)]
theta[[i]]$sigma2<- theta.tmp[(3*k+1):(4*k)]
theta[[i]]$K = k
theta.tmp<-theta.tmp[-(1:(4*k))]
}
theta.tmp = vector("list",N)
j=1
for(i in seq(1,N,by=1)){
theta.tmp[[j]] = theta[[i]]
j=j+1
}
theta.ori = theta
theta = vector("list",N)
theta = theta.tmp
traindata = list("temp","X","Y","curve.num")
traindata$temp =read.table("electric_load_2008.dat")
traindata$curve.num = dim(traindata$temp)[1]/2
traindata$X=(traindata$temp)[(1:traindata$curve.num)*2-1,]
traindata$Y=traindata$temp[(1:traindata$curve.num)*2,]
theta
theta[[10]]
theta[[20]]
theta[[30]]
theta[[21:29]]
theta[[21]]
theta[[22]]
theta[[23]]
theta[[25]]
theta[[24]]
#######################################
tempdata = read.table("electric_load_2008.dat",fill=TRUE)
N = dim(z)[1]
curve.num = dim(tempdata)[1]/2
Nm = dim(tempdata)[2]
Time = tempdata[seq(1,200,by=2),]
elecload = tempdata[seq(2,200,by=2),]
plot.z(Time,elecload,z[N,]+1)
tempdata = read.table("testdata.dat",fill=TRUE)
RMSE = as.vector(rep(0,14*96-97))
SD = as.vector(rep(0,14*96-97))
aaa = 0.0
for(ii in 1:(14*96-97)){
x = seq(ii,ii+95)
y = tempdata[ii:(ii+95)]
x.new = ii+96
k= calc.z.2(x,y,theta[[200]])
y.new = tempdata[x.new]
predictdata = predict.gp(x,y,x.new,y.new,thet = theta[[200]],k)
RMSE[ii] = y.new - predictdata$pred.mean
SD[ii] = predictdata$pred.sd
aaa = aaa+RMSE[[ii]]^2
print(ii)
}
aaa/(length(RMSE))
mean(SD)
tempdata = read.table("testdata.dat",fill=TRUE)
RMSE = as.vector(rep(0,14*96-97))
SD = as.vector(rep(0,14*96-97))
aaa = 0.0
for(ii in 1:(14*96-97)){
x = seq(ii,ii+95)
y = tempdata[ii:(ii+95)]
x.new = ii+96
k= calc.z.2(x,y,theta[[200]])
y.new = tempdata[x.new]
predictdata = predict.gp(x,y,x.new,y.new,thet = theta[[23]],k)
RMSE[ii] = y.new - predictdata$pred.mean
SD[ii] = predictdata$pred.sd
aaa = aaa+RMSE[[ii]]^2
print(ii)
}
aaa/(length(RMSE))
mean(SD)
tempdata = read.table("testdata.dat",fill=TRUE)
RMSE = as.vector(rep(0,14*96-97))
SD = as.vector(rep(0,14*96-97))
aaa = 0.0
for(ii in 1:(14*96-97)){
x = seq(ii,ii+95)
y = tempdata[ii:(ii+95)]
x.new = ii+96
k= calc.z.2(x,y,theta[[23]])
y.new = tempdata[x.new]
predictdata = predict.gp(x,y,x.new,y.new,thet = theta[[23]],k)
RMSE[ii] = y.new - predictdata$pred.mean
SD[ii] = predictdata$pred.sd
aaa = aaa+RMSE[[ii]]^2
print(ii)
}
aaa/(length(RMSE))
mean(SD)
# setwd("~/src/RJMCMC-my-C/fix-k-move/demo/")
# setwd("/media/zheqng/Seagate Backup Plus Drive/zheqng@nwu/src/RJMCMC-my-C/simu1/fix-k-move/demo/")
library("fda")
# library("mcsm")
datha<- read.table("electric_load_2008.sts",fill=TRUE,col.names = c("iter number","K","log lik","split/merge","acc/reject","prob","simu_acc/simu_rej","prob","death or reserve"))
datha.loglik = datha[,"log.lik"]
datha.K = datha[,"K"]
theta.tmp<-read.table("parameter.res",fill=TRUE)
theta.tmp <- as.matrix(theta.tmp)
theta.tmp <- as.vector(theta.tmp)
N = length(theta.tmp)/2/4
z <-read.table("z.res",fill = TRUE)
theta= vector("list",N)
for(i in 1:N){
k = 2
theta[[i]]$pi <- theta.tmp[1:k]
theta[[i]]$w<- theta.tmp[(k+1):(2*k)]
theta[[i]]$v<- theta.tmp[(2*k+1):(3*k)]
theta[[i]]$sigma2<- theta.tmp[(3*k+1):(4*k)]
theta[[i]]$K = k
theta.tmp<-theta.tmp[-(1:(4*k))]
}
theta.tmp = vector("list",N)
j=1
for(i in seq(1,N,by=1)){
theta.tmp[[j]] = theta[[i]]
j=j+1
}
theta.ori = theta
theta = vector("list",N)
theta = theta.tmp
# w = NULL
# for(i in 1:N){
#   w <-rbind(w,theta[[i]]$w)
# }
# load('../function simulation/simudata.RData')
traindata = list("temp","X","Y","curve.num")
traindata$temp =read.table("electric_load_2008.dat")
traindata$curve.num = dim(traindata$temp)[1]/2
traindata$X=(traindata$temp)[(1:traindata$curve.num)*2-1,]
traindata$Y=traindata$temp[(1:traindata$curve.num)*2,]
# testdata = list("temp","X","Y","curve.num")
# testdata$temp =read.table("testdata.dat")
# testdata$curve.num = dim(testdata$temp)[1]/2
# testdata$X=(testdata$temp)[(1:testdata$curve.num)*2-1,]
# testdata$Y=testdata$temp[(1:testdata$curve.num)*2,]
#
# validedata = list("temp","X","Y","curve.num")
# validedata$temp =read.table("../../validedata.dat")
# validedata$curve.num = dim(validedata$temp)[1]/2
# validedata$X=(validedata$temp)[(1:validedata$curve.num)*2-1,]
# validedata$Y=validedata$temp[(1:validedata$curve.num)*2,]
###############################################################
# N.paper=20000
plot(datha.K,type='l',xlab="iteration",ylab="components number")
plot(datha.loglik,type='l',xlab="iteration",ylab="log likelihood")
#############################################################3
boxplot(log.lik~K,data = datha)
summary(as.factor(datha$K))
boxplot(prob ~ split.merge, data = datha)
summary(datha[datha$split.merge=="split",-c(1,2,3,7,8,9)])
summary(datha[datha$split.merge=="merge",-c(1,2,3,7,8,9)])
# min(which(datha.K==2))
###############################################################
# N=N*100
datha.loglik = datha.loglik[seq(1,N,by=100)]
datha.K = datha.K[seq(1,N,by=100)]
datha=datha[seq(1,N,by=100),]
tempdata = read.table("electric_load_2008.dat",fill=TRUE)
N = dim(z)[1]
curve.num = dim(tempdata)[1]/2
Nm = dim(tempdata)[2]
Time = tempdata[seq(1,200,by=2),]
elecload = tempdata[seq(2,200,by=2),]
N=10
plot.z(Time,elecload,z[N,]+1)
theta[[10]]
tempdata = read.table("testdata.dat",fill=TRUE)
RMSE = as.vector(rep(0,14*96-97))
SD = as.vector(rep(0,14*96-97))
aaa = 0.0
for(ii in 1:(14*96-97)){
x = seq(ii,ii+95)
y = tempdata[ii:(ii+95)]
x.new = ii+96
k= calc.z.2(x,y,theta[[10]])
y.new = tempdata[x.new]
predictdata = predict.gp(x,y,x.new,y.new,thet = theta[[10]],k)
RMSE[ii] = y.new - predictdata$pred.mean
SD[ii] = predictdata$pred.sd
aaa = aaa+RMSE[[ii]]^2
print(ii)
}
aaa/(length(RMSE))
mean(SD)
446/60
